import {
    useForm,
    isNotEmpty,
    hasLength,
    matches
} from '@mantine/form';
import { Button, Group, Radio, TextInput, Grid, Checkbox } from '@mantine/core';
import { Accordion } from '@mantine/core';
import { DateInput } from '@mantine/dates';
import CodeSelect from '../controls/CodeSelect.tsx';
import { useApi } from './types.ts';
import { notifications } from '@mantine/notifications';
import { useEffect } from 'react';
import { useParams } from 'react-router';

const Edit = () => {
    {{ use_api(entity_name, name) }}
    const { id } = useParams();

    useEffect(() => {
        if(id === undefined) return;

        api.get(id)
            .then(data => form.initialize(data))
            .catch(error => console.error(error));
    }, []);

  const form = useForm({
        mode: 'uncontrolled',
        initialValues: {
    {%- for section in sections -%}
        {% for field in section.fields %}
            {{ default_value(field) }},
        {% endfor %}
    {%- endfor -%}
        },
        validate: {
    {% for section in sections %}
        {% for field in section.fields %}
            {{ validate(field) }}
        {% endfor %}
    {%- endfor -%}
        }
      });

    const handleSubmit = form.onSubmit(values => {
        if(id === undefined) return;

        api.put(id, values)
            .then(() => {
                notifications.show({
                  title: 'Saved!',
                  message: '{{ entity_name | label_name }} saved successfully!',
                });
            })
            .catch(error => {
                console.table(error);
                notifications.show({
                  title: 'Error',
                  message: 'TODO' + Object.entries(error).map((k,v) => `${k}; ${v}`)
                      .join('; '),
                });
            })
        }
    );

return <form onSubmit={handleSubmit}>
    <Accordion defaultValue="{{ sections[0].name }}">
    {% for section in sections %}
        <Accordion.Item key="{{ section.name }}" value="{{ section.name }}">
          <Accordion.Control>{{ section.name|title_name }}</Accordion.Control>
          <Accordion.Panel>
              <Grid>
              {% for field in section.fields %}
                  {{ form_input(field) }}
              {%- endfor -%}
              </Grid>
          </Accordion.Panel>
        </Accordion.Item>
    {% endfor %}
    </Accordion>
    <Group justify="flex-end" mt="md">
        <Button type="submit">Save</Button>
    </Group>
  </form>;
}

export default Edit;