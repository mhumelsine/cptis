import React from "react";
import { FiFilePlus } from "react-icons/fi";
import {
    MRT_Row,
    MRT_TableInstance,
    type MRT_ColumnDef,
} from "mantine-react-table";
import useApi from "../../api/hooks/useApi";
import "@mantine/core/styles.css";
import "@mantine/dates/styles.css";
import "mantine-react-table/styles.css";
import { NavLink } from "react-router-dom";
import { TableGridEditable } from "../../common/controls/TableGrid";
import { AbuseReview, AbuseReviewLabel } from "../abuse-review/types";

type SaveHandlerProps = {
    exitEditingMode: () => void;
    row: MRT_Row<{{ entity_name|title }}>;
    table: MRT_TableInstance<{{ entity_name|title }}>;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    values: Record<string, any>;
};

const Grid = () => {
    {{ use_api(entity_name, name) }}

    const columns = React.useMemo<MRT_ColumnDef<{{ entity_name|title }}>[]>(
        () => [
            {% for column in grid.columns %}
            {
                accessorKey: "{{ column.id }}",
                header: "{{ column.id | label_name }}",
                {% if column.filter != 'false' %}
                filterFn: '{{ column.filter }}',
                {%  endif %}
                {% if column.cell == 'link' %}
                Cell: ({ cell }) => <NavLink
                        className="text-blue-600"
                        to={`?id=${cell.getValue<{{ column.type }}>()}`}
                    >
                        {cell.getValue<{{ column.type }}>()}
                    </NavLink>,
                {%  endif %}
            },
            {%- endfor -%}
        ],
        []
    );

    const handleSaveRow = async (props: SaveHandlerProps) => {
        const { row, table, values } = props;
        // call api updates here

        console.log(row);
        console.log(values);

        // close edit mode
        table.setEditingRow(null);
    };

    return <div>
        <div
            className="flex text-left pb-2"
            title="{{ entity_name|capitalize }} {{ name | capitalize }}"
            style={{ '{{ color: "var(--cptis-purple)" }}' }}
        >
            <FiFilePlus fontSize={30} strokeWidth="2.75" />
            <div className="flex pl-3 self-end font-semibold">{text}</div>
        </div>

        <div className="bg-white w-100 border-2 rounded-lg border-gray shadow-md">
            <TableGridEditable
                data={data}
                isFetching={isFetching}
                isLoading={isLoading}
                labels={AbuseReviewLabel}
                onSave={handleSaveRow}
                columns={columns}
            />
        </div>
    </div>;
};

export default Grid;